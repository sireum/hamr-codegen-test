package FanInFanOutSystem
public
	with Base_Types;
	
	--===========================================================================================================
	--
	--   T o p - L e v e l     S y s t e m
	--
	--   
	--===========================================================================================================
	
	system Sys
	end Sys;
		
	system implementation Sys.i
	  subcomponents
	    fanIn: process FanInProc.i;
	    fanOut: process FanOutProc.i;
	end Sys.i;
	
	--===========================================================================================================
	--
	--   P r o c e s s e s
	--
	--===========================================================================================================
	
	process FanInProc
	end FanInProc;
		
	process implementation FanInProc.i
	  subcomponents
	    producer1: thread ProducerThr.i;
	    producer2: thread ProducerThr.i;
	    consumer: thread ConsumerThr.i;
	  connections
        conn1: port producer1.myInteger -> consumer.myInteger;
        conn2: port producer2.myInteger -> consumer.myInteger;
	end FanInProc.i;
	
	process FanOutProc
	end FanOutProc;
		
	process implementation FanOutProc.i
	  subcomponents
	    producer: thread ProducerThr.i;
	    consumer1: thread ConsumerThr.i;
	    consumer2: thread ConsumerThr.i;
	  connections
        conn1: port producer.myInteger -> consumer1.myInteger;
        conn2: port producer.myInteger -> consumer2.myInteger;
	end FanOutProc.i;
	
	--===========================================================================================================
	--
	--   T h r e a d s
	--
	--===========================================================================================================
	
	thread ProducerThr
	  features
	  -- ==== OUTPUTS ====	
	    myInteger : out event data port Base_Types::Integer;
	  properties
	    Dispatch_Protocol => Periodic;
	    Period => 1000ms;
	end ProducerThr;
	
	thread implementation ProducerThr.i
	end ProducerThr.i;
	
	thread ConsumerThr
	  features
	  -- ==== INPUTS ====	
	    myInteger : in event data port Base_Types::Integer;
	  properties
	   Dispatch_Protocol => Sporadic;
	   Period => 1000ms;
	end ConsumerThr;
	
	thread implementation ConsumerThr.i
	end ConsumerThr.i;
	
end FanInFanOutSystem;