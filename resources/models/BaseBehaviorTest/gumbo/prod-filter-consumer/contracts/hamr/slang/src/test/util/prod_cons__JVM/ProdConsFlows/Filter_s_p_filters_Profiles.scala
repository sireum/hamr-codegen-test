// #Sireum

package prod_cons__JVM.ProdConsFlows

import org.sireum._
import prod_cons__JVM.util.Profile
import prod_cons__JVM.util.EmptyContainer
import prod_cons__JVM.RandomLib

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

// Profile for initialise entrypoint
@msig trait Filter_s_p_filters_Profile_Trait extends Profile

@record class Filter_s_p_filters_Profile (
  val name: String,
) extends Filter_s_p_filters_Profile_Trait {

  override def next: EmptyContainer = {
    return EmptyContainer()
  }
}

// Profile with generators for incoming ports
@msig trait Filter_s_p_filters_Profile_P_Trait extends Profile {
  def api_d_event_in: RandomLib // random lib for generating art.Empty
  def api_b_event_data_in: RandomLib // random lib for generating ProdConsFlows.Container_i
  def api_c_event_data_in: RandomLib // random lib for generating ProdConsFlows.Container_i
  def api_a_data_in: RandomLib // random lib for generating ProdConsFlows.Container_i
}

@record class Filter_s_p_filters_Profile_P(
  val name: String,
  var api_d_event_in: RandomLib, // random lib for generating art.Empty
  var api_b_event_data_in: RandomLib, // random lib for generating ProdConsFlows.Container_i
  var api_c_event_data_in: RandomLib, // random lib for generating ProdConsFlows.Container_i
  var api_a_data_in: RandomLib // random lib for generating ProdConsFlows.Container_i
  ) extends Filter_s_p_filters_Profile_P_Trait {

  override def next: Filter_s_p_filters_PreState_Container_P = {
    return (Filter_s_p_filters_PreState_Container_P (
      api_d_event_in = api_d_event_in.nextOption_artEmpty(),
      api_b_event_data_in = api_b_event_data_in.nextOptionProdConsFlowsContainer_i(),
      api_c_event_data_in = api_c_event_data_in.nextOptionProdConsFlowsContainer_i(),
      api_a_data_in = api_a_data_in.nextProdConsFlowsContainer_i()))
  }
}

// Profile with generators for state variables and incoming ports
@msig trait Filter_s_p_filters_Profile_PS_Trait extends Profile {
  def api_d_event_in: RandomLib // random lib for generating art.Empty
  def api_b_event_data_in: RandomLib // random lib for generating ProdConsFlows.Container_i
  def api_c_event_data_in: RandomLib // random lib for generating ProdConsFlows.Container_i
  def api_a_data_in: RandomLib // random lib for generating ProdConsFlows.Container_i
}

@record class Filter_s_p_filters_Profile_PS(
  val name: String,
  var api_d_event_in: RandomLib, // random lib for generating art.Empty
  var api_b_event_data_in: RandomLib, // random lib for generating ProdConsFlows.Container_i
  var api_c_event_data_in: RandomLib, // random lib for generating ProdConsFlows.Container_i
  var api_a_data_in: RandomLib // random lib for generating ProdConsFlows.Container_i
  ) extends Filter_s_p_filters_Profile_PS_Trait {

  override def next: Filter_s_p_filters_PreState_Container_PS = {
    return (Filter_s_p_filters_PreState_Container_PS (
      api_d_event_in = api_d_event_in.nextOption_artEmpty(),
      api_b_event_data_in = api_b_event_data_in.nextOptionProdConsFlowsContainer_i(),
      api_c_event_data_in = api_c_event_data_in.nextOptionProdConsFlowsContainer_i(),
      api_a_data_in = api_a_data_in.nextProdConsFlowsContainer_i()))
  }
}
