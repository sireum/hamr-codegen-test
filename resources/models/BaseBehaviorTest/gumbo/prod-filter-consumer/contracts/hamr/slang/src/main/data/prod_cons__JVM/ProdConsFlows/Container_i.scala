// #Sireum

package prod_cons__JVM.ProdConsFlows

import org.sireum._
import prod_cons__JVM._

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

object Container_i {
  def example(): ProdConsFlows.Container_i = {
    return ProdConsFlows.Container_i(
      value = Base_Types.Integer_example())
  }

  /** invariant gtZero
    *   Must be greater than zero
    */
  @strictpure def gtZero_Invariant(value: ProdConsFlows.Container_i): B =
    value.value > 0

  /** D-Inv Data Invariant for ProdConsFlows.Container_i
    */
  @strictpure def D_Inv_Container_i(value: ProdConsFlows.Container_i): B =
    (gtZero_Invariant(value))

  /** D-Inv-Guard Data Invariant for ProdConsFlows.Container_i
    */
  @strictpure def D_Inv_Guard_Container_i(value: Option[ProdConsFlows.Container_i]): B =
    value.nonEmpty -->: D_Inv_Container_i(value.get)
}

@datatype class Container_i(
  val value: Z) {
  @spec def gtZero = Invariant(
    value > 0
  )
}

object Container_i_Payload {
  def example(): Container_i_Payload = {
    return Container_i_Payload(ProdConsFlows.Container_i.example())
  }
}

@datatype class Container_i_Payload(value: ProdConsFlows.Container_i) extends art.DataContent
