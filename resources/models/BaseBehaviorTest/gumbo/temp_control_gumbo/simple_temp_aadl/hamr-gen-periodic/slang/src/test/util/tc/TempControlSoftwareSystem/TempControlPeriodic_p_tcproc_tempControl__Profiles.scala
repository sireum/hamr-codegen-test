// #Sireum

package tc.TempControlSoftwareSystem

import org.sireum._
import tc.RandomLib

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

// Profile for initialise entrypoint
@record class TempControlPeriodic_p_tcproc_tempControl_Profile (
  val name: String,
  val numTests: Z //number of tests to generate
)

// Profile with generators for incoming ports
@record class TempControlPeriodic_p_tcproc_tempControl_Profile_P(
  val name: String,
  val numTests: Z, // number of tests to generate
  var numTestVectorGenRetries: Z, // number of test vector generation retries
  var api_currentTemp: RandomLib, // random lib for generating TempSensor.Temperature_i
  var api_fanAck: RandomLib, // random lib for generating CoolingFan.FanAck
  var api_setPoint: RandomLib // random lib for generating TempControlSoftwareSystem.SetPoint_i
  )

// Profile with generators for state variables and incoming ports
@record class TempControlPeriodic_p_tcproc_tempControl_Profile_PS(
  val name: String,
  val numTests: Z, // number of tests to generate
  var numTestVectorGenRetries: Z, // number of test vector generation retries
  var In_latestFanCmd: RandomLib, // random lib for generating CoolingFan.FanCmd
  var api_currentTemp: RandomLib, // random lib for generating TempSensor.Temperature_i
  var api_fanAck: RandomLib, // random lib for generating CoolingFan.FanAck
  var api_setPoint: RandomLib // random lib for generating TempControlSoftwareSystem.SetPoint_i
  )
